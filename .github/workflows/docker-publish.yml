name: Publish Docker 

on:
  push:
    branches:
      # 监听推送到 master 分支
      - "master"
    # 监听以 v 开头的标签
    tags:
      - 'v*'
  pull_request:
    # 监听针对 master 分支的拉取请求
    branches:
      - "master"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build and push (e.g., v1.2.3)'
        required: true

env:
  REPO: wjg97/telegram-onedrive
  NAME: KahKee
  EMAIL: 946612410@qq.com
  GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  TAG_NAME: ${{ github.event_name == 'workflow_dispatch' && inputs.version || github.event.release.tag_name }}
  RELEASE_VERSION: ${{ github.event_name == 'workflow_dispatch' && inputs.version || github.event.release.tag_name }}

permissions:
  contents: read

run-name: ${{ github.event_name == 'workflow_dispatch' && inputs.version || github.event.release.tag_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ env.GITHUB_TOKEN }}
    
    - name: Update Version
      run: |
        PROJECT_NAME=$(grep '^name = ' Cargo.toml | awk -F'"' '{print $2}')
        sed -i "/^name = \"$PROJECT_NAME\"$/{N; s/version = \".*\"/version = \"$RELEASE_VERSION\"/}" Cargo.toml
        sed -i "/^name = \"$PROJECT_NAME\"$/{N; s/version = \".*\"/version = \"$RELEASE_VERSION\"/}" Cargo.lock

    - name: Commit and Push version changes
      run: |
        git config --global user.name $NAME
        git config --global user.email $EMAIL
        git add -A
        if git diff-index --quiet HEAD --; then
            echo "Bypass commit."
        else
            git commit -m "chore: update version to $RELEASE_VERSION"
            git tag -f $RELEASE_VERSION
            git push origin HEAD:master
            git push origin HEAD:master --tags -f
        fi

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.REPO }}:${{ env.TAG_NAME }},${{ env.REPO }}:latest
